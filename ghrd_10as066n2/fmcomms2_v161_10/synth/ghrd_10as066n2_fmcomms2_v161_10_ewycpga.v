// ghrd_10as066n2_fmcomms2_v161_10_ewycpga.v

// Generated using ACDS version 16.1 203

`timescale 1 ps / 1 ps
module ghrd_10as066n2_fmcomms2_v161_10_ewycpga (
		output wire        axi_ad9361_adc_dma_intr_irq,            //       axi_ad9361_adc_dma_intr.irq
		output wire        axi_ad9361_adc_dma_m_dest_axi_awvalid,  // axi_ad9361_adc_dma_m_dest_axi.awvalid
		output wire [31:0] axi_ad9361_adc_dma_m_dest_axi_awaddr,   //                              .awaddr
		input  wire        axi_ad9361_adc_dma_m_dest_axi_awready,  //                              .awready
		output wire        axi_ad9361_adc_dma_m_dest_axi_wvalid,   //                              .wvalid
		output wire [63:0] axi_ad9361_adc_dma_m_dest_axi_wdata,    //                              .wdata
		output wire [7:0]  axi_ad9361_adc_dma_m_dest_axi_wstrb,    //                              .wstrb
		input  wire        axi_ad9361_adc_dma_m_dest_axi_wready,   //                              .wready
		input  wire        axi_ad9361_adc_dma_m_dest_axi_bvalid,   //                              .bvalid
		input  wire [1:0]  axi_ad9361_adc_dma_m_dest_axi_bresp,    //                              .bresp
		output wire        axi_ad9361_adc_dma_m_dest_axi_bready,   //                              .bready
		output wire        axi_ad9361_adc_dma_m_dest_axi_arvalid,  //                              .arvalid
		output wire [31:0] axi_ad9361_adc_dma_m_dest_axi_araddr,   //                              .araddr
		input  wire        axi_ad9361_adc_dma_m_dest_axi_arready,  //                              .arready
		input  wire        axi_ad9361_adc_dma_m_dest_axi_rvalid,   //                              .rvalid
		input  wire [1:0]  axi_ad9361_adc_dma_m_dest_axi_rresp,    //                              .rresp
		input  wire [63:0] axi_ad9361_adc_dma_m_dest_axi_rdata,    //                              .rdata
		output wire        axi_ad9361_adc_dma_m_dest_axi_rready,   //                              .rready
		output wire [7:0]  axi_ad9361_adc_dma_m_dest_axi_awlen,    //                              .awlen
		output wire [2:0]  axi_ad9361_adc_dma_m_dest_axi_awsize,   //                              .awsize
		output wire [1:0]  axi_ad9361_adc_dma_m_dest_axi_awburst,  //                              .awburst
		output wire [3:0]  axi_ad9361_adc_dma_m_dest_axi_awcache,  //                              .awcache
		output wire [2:0]  axi_ad9361_adc_dma_m_dest_axi_awprot,   //                              .awprot
		output wire        axi_ad9361_adc_dma_m_dest_axi_wlast,    //                              .wlast
		output wire [7:0]  axi_ad9361_adc_dma_m_dest_axi_arlen,    //                              .arlen
		output wire [2:0]  axi_ad9361_adc_dma_m_dest_axi_arsize,   //                              .arsize
		output wire [1:0]  axi_ad9361_adc_dma_m_dest_axi_arburst,  //                              .arburst
		output wire [3:0]  axi_ad9361_adc_dma_m_dest_axi_arcache,  //                              .arcache
		output wire [2:0]  axi_ad9361_adc_dma_m_dest_axi_arprot,   //                              .arprot
		input  wire        axi_ad9361_adc_dma_s_axi_awvalid,       //      axi_ad9361_adc_dma_s_axi.awvalid
		input  wire [13:0] axi_ad9361_adc_dma_s_axi_awaddr,        //                              .awaddr
		output wire        axi_ad9361_adc_dma_s_axi_awready,       //                              .awready
		input  wire        axi_ad9361_adc_dma_s_axi_wvalid,        //                              .wvalid
		input  wire [31:0] axi_ad9361_adc_dma_s_axi_wdata,         //                              .wdata
		input  wire [3:0]  axi_ad9361_adc_dma_s_axi_wstrb,         //                              .wstrb
		output wire        axi_ad9361_adc_dma_s_axi_wready,        //                              .wready
		output wire        axi_ad9361_adc_dma_s_axi_bvalid,        //                              .bvalid
		output wire [1:0]  axi_ad9361_adc_dma_s_axi_bresp,         //                              .bresp
		input  wire        axi_ad9361_adc_dma_s_axi_bready,        //                              .bready
		input  wire        axi_ad9361_adc_dma_s_axi_arvalid,       //                              .arvalid
		input  wire [13:0] axi_ad9361_adc_dma_s_axi_araddr,        //                              .araddr
		output wire        axi_ad9361_adc_dma_s_axi_arready,       //                              .arready
		output wire        axi_ad9361_adc_dma_s_axi_rvalid,        //                              .rvalid
		output wire [1:0]  axi_ad9361_adc_dma_s_axi_rresp,         //                              .rresp
		output wire [31:0] axi_ad9361_adc_dma_s_axi_rdata,         //                              .rdata
		input  wire        axi_ad9361_adc_dma_s_axi_rready,        //                              .rready
		input  wire [2:0]  axi_ad9361_adc_dma_s_axi_awprot,        //                              .awprot
		input  wire [2:0]  axi_ad9361_adc_dma_s_axi_arprot,        //                              .arprot
		output wire        axi_ad9361_dac_dma_intr_irq,            //       axi_ad9361_dac_dma_intr.irq
		output wire        axi_ad9361_dac_dma_m_src_axi_awvalid,   //  axi_ad9361_dac_dma_m_src_axi.awvalid
		output wire [31:0] axi_ad9361_dac_dma_m_src_axi_awaddr,    //                              .awaddr
		input  wire        axi_ad9361_dac_dma_m_src_axi_awready,   //                              .awready
		output wire        axi_ad9361_dac_dma_m_src_axi_wvalid,    //                              .wvalid
		output wire [63:0] axi_ad9361_dac_dma_m_src_axi_wdata,     //                              .wdata
		output wire [7:0]  axi_ad9361_dac_dma_m_src_axi_wstrb,     //                              .wstrb
		input  wire        axi_ad9361_dac_dma_m_src_axi_wready,    //                              .wready
		input  wire        axi_ad9361_dac_dma_m_src_axi_bvalid,    //                              .bvalid
		input  wire [1:0]  axi_ad9361_dac_dma_m_src_axi_bresp,     //                              .bresp
		output wire        axi_ad9361_dac_dma_m_src_axi_bready,    //                              .bready
		output wire        axi_ad9361_dac_dma_m_src_axi_arvalid,   //                              .arvalid
		output wire [31:0] axi_ad9361_dac_dma_m_src_axi_araddr,    //                              .araddr
		input  wire        axi_ad9361_dac_dma_m_src_axi_arready,   //                              .arready
		input  wire        axi_ad9361_dac_dma_m_src_axi_rvalid,    //                              .rvalid
		input  wire [1:0]  axi_ad9361_dac_dma_m_src_axi_rresp,     //                              .rresp
		input  wire [63:0] axi_ad9361_dac_dma_m_src_axi_rdata,     //                              .rdata
		output wire        axi_ad9361_dac_dma_m_src_axi_rready,    //                              .rready
		output wire [7:0]  axi_ad9361_dac_dma_m_src_axi_awlen,     //                              .awlen
		output wire [2:0]  axi_ad9361_dac_dma_m_src_axi_awsize,    //                              .awsize
		output wire [1:0]  axi_ad9361_dac_dma_m_src_axi_awburst,   //                              .awburst
		output wire [3:0]  axi_ad9361_dac_dma_m_src_axi_awcache,   //                              .awcache
		output wire [2:0]  axi_ad9361_dac_dma_m_src_axi_awprot,    //                              .awprot
		output wire        axi_ad9361_dac_dma_m_src_axi_wlast,     //                              .wlast
		output wire [7:0]  axi_ad9361_dac_dma_m_src_axi_arlen,     //                              .arlen
		output wire [2:0]  axi_ad9361_dac_dma_m_src_axi_arsize,    //                              .arsize
		output wire [1:0]  axi_ad9361_dac_dma_m_src_axi_arburst,   //                              .arburst
		output wire [3:0]  axi_ad9361_dac_dma_m_src_axi_arcache,   //                              .arcache
		output wire [2:0]  axi_ad9361_dac_dma_m_src_axi_arprot,    //                              .arprot
		input  wire        axi_ad9361_dac_dma_s_axi_awvalid,       //      axi_ad9361_dac_dma_s_axi.awvalid
		input  wire [13:0] axi_ad9361_dac_dma_s_axi_awaddr,        //                              .awaddr
		output wire        axi_ad9361_dac_dma_s_axi_awready,       //                              .awready
		input  wire        axi_ad9361_dac_dma_s_axi_wvalid,        //                              .wvalid
		input  wire [31:0] axi_ad9361_dac_dma_s_axi_wdata,         //                              .wdata
		input  wire [3:0]  axi_ad9361_dac_dma_s_axi_wstrb,         //                              .wstrb
		output wire        axi_ad9361_dac_dma_s_axi_wready,        //                              .wready
		output wire        axi_ad9361_dac_dma_s_axi_bvalid,        //                              .bvalid
		output wire [1:0]  axi_ad9361_dac_dma_s_axi_bresp,         //                              .bresp
		input  wire        axi_ad9361_dac_dma_s_axi_bready,        //                              .bready
		input  wire        axi_ad9361_dac_dma_s_axi_arvalid,       //                              .arvalid
		input  wire [13:0] axi_ad9361_dac_dma_s_axi_araddr,        //                              .araddr
		output wire        axi_ad9361_dac_dma_s_axi_arready,       //                              .arready
		output wire        axi_ad9361_dac_dma_s_axi_rvalid,        //                              .rvalid
		output wire [1:0]  axi_ad9361_dac_dma_s_axi_rresp,         //                              .rresp
		output wire [31:0] axi_ad9361_dac_dma_s_axi_rdata,         //                              .rdata
		input  wire        axi_ad9361_dac_dma_s_axi_rready,        //                              .rready
		input  wire [2:0]  axi_ad9361_dac_dma_s_axi_awprot,        //                              .awprot
		input  wire [2:0]  axi_ad9361_dac_dma_s_axi_arprot,        //                              .arprot
		input  wire        axi_ad9361_device_if_rx_clk_in_p,       //          axi_ad9361_device_if.rx_clk_in_p
		input  wire        axi_ad9361_device_if_rx_clk_in_n,       //                              .rx_clk_in_n
		input  wire        axi_ad9361_device_if_rx_frame_in_p,     //                              .rx_frame_in_p
		input  wire        axi_ad9361_device_if_rx_frame_in_n,     //                              .rx_frame_in_n
		input  wire [5:0]  axi_ad9361_device_if_rx_data_in_p,      //                              .rx_data_in_p
		input  wire [5:0]  axi_ad9361_device_if_rx_data_in_n,      //                              .rx_data_in_n
		output wire        axi_ad9361_device_if_tx_clk_out_p,      //                              .tx_clk_out_p
		output wire        axi_ad9361_device_if_tx_clk_out_n,      //                              .tx_clk_out_n
		output wire        axi_ad9361_device_if_tx_frame_out_p,    //                              .tx_frame_out_p
		output wire        axi_ad9361_device_if_tx_frame_out_n,    //                              .tx_frame_out_n
		output wire [5:0]  axi_ad9361_device_if_tx_data_out_p,     //                              .tx_data_out_p
		output wire [5:0]  axi_ad9361_device_if_tx_data_out_n,     //                              .tx_data_out_n
		output wire        axi_ad9361_device_if_enable,            //                              .enable
		output wire        axi_ad9361_device_if_txnrx,             //                              .txnrx
		output wire        axi_ad9361_l_clk_clk,                   //              axi_ad9361_l_clk.clk
		input  wire        axi_ad9361_s_axi_awvalid,               //              axi_ad9361_s_axi.awvalid
		input  wire [15:0] axi_ad9361_s_axi_awaddr,                //                              .awaddr
		input  wire [2:0]  axi_ad9361_s_axi_awprot,                //                              .awprot
		output wire        axi_ad9361_s_axi_awready,               //                              .awready
		input  wire        axi_ad9361_s_axi_wvalid,                //                              .wvalid
		input  wire [31:0] axi_ad9361_s_axi_wdata,                 //                              .wdata
		input  wire [3:0]  axi_ad9361_s_axi_wstrb,                 //                              .wstrb
		output wire        axi_ad9361_s_axi_wready,                //                              .wready
		output wire        axi_ad9361_s_axi_bvalid,                //                              .bvalid
		output wire [1:0]  axi_ad9361_s_axi_bresp,                 //                              .bresp
		input  wire        axi_ad9361_s_axi_bready,                //                              .bready
		input  wire        axi_ad9361_s_axi_arvalid,               //                              .arvalid
		input  wire [15:0] axi_ad9361_s_axi_araddr,                //                              .araddr
		input  wire [2:0]  axi_ad9361_s_axi_arprot,                //                              .arprot
		output wire        axi_ad9361_s_axi_arready,               //                              .arready
		output wire        axi_ad9361_s_axi_rvalid,                //                              .rvalid
		output wire [1:0]  axi_ad9361_s_axi_rresp,                 //                              .rresp
		output wire [31:0] axi_ad9361_s_axi_rdata,                 //                              .rdata
		input  wire        axi_ad9361_s_axi_rready,                //                              .rready
		input  wire        delay_clk_clk,                          //                     delay_clk.clk
		output wire [4:0]  gpio_external_connection_export,        //      gpio_external_connection.export
		input  wire [1:0]  gpio_s1_address,                        //                       gpio_s1.address
		input  wire        gpio_s1_write_n,                        //                              .write_n
		input  wire [31:0] gpio_s1_writedata,                      //                              .writedata
		input  wire        gpio_s1_chipselect,                     //                              .chipselect
		output wire [31:0] gpio_s1_readdata,                       //                              .readdata
		input  wire        mem_clk_clk,                            //                       mem_clk.clk
		input  wire        mem_rst_reset,                          //                       mem_rst.reset
		input  wire        spi_ad9361_external_MISO,               //           spi_ad9361_external.MISO
		output wire        spi_ad9361_external_MOSI,               //                              .MOSI
		output wire        spi_ad9361_external_SCLK,               //                              .SCLK
		output wire        spi_ad9361_external_SS_n,               //                              .SS_n
		output wire        spi_ad9361_irq_irq,                     //                spi_ad9361_irq.irq
		input  wire [15:0] spi_ad9361_spi_control_port_writedata,  //   spi_ad9361_spi_control_port.writedata
		output wire [15:0] spi_ad9361_spi_control_port_readdata,   //                              .readdata
		input  wire [2:0]  spi_ad9361_spi_control_port_address,    //                              .address
		input  wire        spi_ad9361_spi_control_port_read_n,     //                              .read_n
		input  wire        spi_ad9361_spi_control_port_chipselect, //                              .chipselect
		input  wire        spi_ad9361_spi_control_port_write_n,    //                              .write_n
		input  wire        sys_clk_clk,                            //                       sys_clk.clk
		input  wire        sys_rst_reset,                          //                       sys_rst.reset
		input  wire        up_enable_up_enable,                    //                     up_enable.up_enable
		input  wire        up_txnrx_up_txnrx                       //                      up_txnrx.up_txnrx
	);

	wire         axi_ad9361_adc_ch_1_valid;                       // axi_ad9361:adc_valid_q0 -> util_ad9361_adc_fifo:din_valid_1
	wire  [15:0] axi_ad9361_adc_ch_1_data;                        // axi_ad9361:adc_data_q0 -> util_ad9361_adc_fifo:din_data_1
	wire         axi_ad9361_adc_ch_1_enable;                      // axi_ad9361:adc_enable_q0 -> util_ad9361_adc_fifo:din_enable_1
	wire         axi_ad9361_adc_ch_2_valid;                       // axi_ad9361:adc_valid_i1 -> util_ad9361_adc_fifo:din_valid_2
	wire  [15:0] axi_ad9361_adc_ch_2_data;                        // axi_ad9361:adc_data_i1 -> util_ad9361_adc_fifo:din_data_2
	wire         axi_ad9361_adc_ch_2_enable;                      // axi_ad9361:adc_enable_i1 -> util_ad9361_adc_fifo:din_enable_2
	wire         axi_ad9361_adc_ch_3_valid;                       // axi_ad9361:adc_valid_q1 -> util_ad9361_adc_fifo:din_valid_3
	wire  [15:0] axi_ad9361_adc_ch_3_data;                        // axi_ad9361:adc_data_q1 -> util_ad9361_adc_fifo:din_data_3
	wire         axi_ad9361_adc_ch_3_enable;                      // axi_ad9361:adc_enable_q1 -> util_ad9361_adc_fifo:din_enable_3
	wire         axi_ad9361_dac_ch_0_valid;                       // axi_ad9361:dac_valid_i0 -> util_ad9361_dac_upack:dac_valid_0
	wire  [15:0] util_ad9361_dac_upack_dac_ch_0_data;             // util_ad9361_dac_upack:dac_data_0 -> axi_ad9361:dac_data_i0
	wire         axi_ad9361_dac_ch_0_enable;                      // axi_ad9361:dac_enable_i0 -> util_ad9361_dac_upack:dac_enable_0
	wire         axi_ad9361_dac_ch_1_valid;                       // axi_ad9361:dac_valid_q0 -> util_ad9361_dac_upack:dac_valid_1
	wire  [15:0] util_ad9361_dac_upack_dac_ch_1_data;             // util_ad9361_dac_upack:dac_data_1 -> axi_ad9361:dac_data_q0
	wire         axi_ad9361_dac_ch_1_enable;                      // axi_ad9361:dac_enable_q0 -> util_ad9361_dac_upack:dac_enable_1
	wire         axi_ad9361_dac_ch_2_valid;                       // axi_ad9361:dac_valid_i1 -> util_ad9361_dac_upack:dac_valid_2
	wire  [15:0] util_ad9361_dac_upack_dac_ch_2_data;             // util_ad9361_dac_upack:dac_data_2 -> axi_ad9361:dac_data_i1
	wire         axi_ad9361_dac_ch_2_enable;                      // axi_ad9361:dac_enable_i1 -> util_ad9361_dac_upack:dac_enable_2
	wire         axi_ad9361_dac_ch_3_valid;                       // axi_ad9361:dac_valid_q1 -> util_ad9361_dac_upack:dac_valid_3
	wire  [15:0] util_ad9361_dac_upack_dac_ch_3_data;             // util_ad9361_dac_upack:dac_data_3 -> axi_ad9361:dac_data_q1
	wire         axi_ad9361_dac_ch_3_enable;                      // axi_ad9361:dac_enable_q1 -> util_ad9361_dac_upack:dac_enable_3
	wire         axi_ad9361_adc_ch_0_valid;                       // axi_ad9361:adc_valid_i0 -> util_ad9361_adc_fifo:din_valid_0
	wire  [15:0] axi_ad9361_adc_ch_0_data;                        // axi_ad9361:adc_data_i0 -> util_ad9361_adc_fifo:din_data_0
	wire         axi_ad9361_adc_ch_0_enable;                      // axi_ad9361:adc_enable_i0 -> util_ad9361_adc_fifo:din_enable_0
	wire         util_ad9361_adc_fifo_dout_0_valid;               // util_ad9361_adc_fifo:dout_valid_0 -> util_ad9361_adc_cpack:adc_valid_0
	wire  [15:0] util_ad9361_adc_fifo_dout_0_data;                // util_ad9361_adc_fifo:dout_data_0 -> util_ad9361_adc_cpack:adc_data_0
	wire         util_ad9361_adc_fifo_dout_0_enable;              // util_ad9361_adc_fifo:dout_enable_0 -> util_ad9361_adc_cpack:adc_enable_0
	wire         util_ad9361_adc_fifo_dout_1_valid;               // util_ad9361_adc_fifo:dout_valid_1 -> util_ad9361_adc_cpack:adc_valid_1
	wire  [15:0] util_ad9361_adc_fifo_dout_1_data;                // util_ad9361_adc_fifo:dout_data_1 -> util_ad9361_adc_cpack:adc_data_1
	wire         util_ad9361_adc_fifo_dout_1_enable;              // util_ad9361_adc_fifo:dout_enable_1 -> util_ad9361_adc_cpack:adc_enable_1
	wire         util_ad9361_adc_fifo_dout_2_valid;               // util_ad9361_adc_fifo:dout_valid_2 -> util_ad9361_adc_cpack:adc_valid_2
	wire  [15:0] util_ad9361_adc_fifo_dout_2_data;                // util_ad9361_adc_fifo:dout_data_2 -> util_ad9361_adc_cpack:adc_data_2
	wire         util_ad9361_adc_fifo_dout_2_enable;              // util_ad9361_adc_fifo:dout_enable_2 -> util_ad9361_adc_cpack:adc_enable_2
	wire         util_ad9361_adc_fifo_dout_3_valid;               // util_ad9361_adc_fifo:dout_valid_3 -> util_ad9361_adc_cpack:adc_valid_3
	wire  [15:0] util_ad9361_adc_fifo_dout_3_data;                // util_ad9361_adc_fifo:dout_data_3 -> util_ad9361_adc_cpack:adc_data_3
	wire         util_ad9361_adc_fifo_dout_3_enable;              // util_ad9361_adc_fifo:dout_enable_3 -> util_ad9361_adc_cpack:adc_enable_3
	wire  [63:0] util_ad9361_adc_cpack_if_adc_data_data;          // util_ad9361_adc_cpack:adc_data -> axi_ad9361_adc_dma:fifo_wr_din
	wire         util_ad9361_adc_fifo_if_din_ovf_ovf;             // util_ad9361_adc_fifo:din_ovf -> axi_ad9361:adc_dovf
	wire         util_ad9361_adc_cpack_if_adc_sync_sync;          // util_ad9361_adc_cpack:adc_sync -> axi_ad9361_adc_dma:fifo_wr_sync
	wire         util_ad9361_adc_cpack_if_adc_valid_valid;        // util_ad9361_adc_cpack:adc_valid -> axi_ad9361_adc_dma:fifo_wr_en
	wire  [63:0] axi_ad9361_dac_dma_if_fifo_rd_dout_data;         // axi_ad9361_dac_dma:fifo_rd_dout -> util_ad9361_dac_upack:dac_data
	wire         axi_ad9361_dac_dma_if_fifo_rd_underflow_unf;     // axi_ad9361_dac_dma:fifo_rd_underflow -> axi_ad9361:dac_dunf
	wire         util_ad9361_dac_upack_if_dac_valid_valid;        // util_ad9361_dac_upack:dac_valid -> axi_ad9361_dac_dma:fifo_rd_en
	wire         axi_ad9361_adc_dma_if_fifo_wr_overflow_ovf;      // axi_ad9361_adc_dma:fifo_wr_overflow -> util_ad9361_adc_fifo:dout_ovf
	wire         axi_ad9361_dac_dma_if_fifo_rd_xfer_req_xfer_req; // axi_ad9361_dac_dma:fifo_rd_xfer_req -> util_ad9361_dac_upack:dma_xfer_in
	wire         axi_ad9361_if_rst_reset;                         // axi_ad9361:rst -> util_ad9361_adc_fifo:din_rst
	wire         rst_controller_reset_out_reset;                  // rst_controller:reset_out -> [axi_ad9361:s_axi_aresetn, axi_ad9361_adc_dma:s_axi_aresetn, axi_ad9361_dac_dma:s_axi_aresetn, gpio:reset_n, spi_ad9361:reset_n, util_ad9361_adc_cpack:adc_rst, util_ad9361_adc_fifo:dout_rstn]
	wire         rst_controller_001_reset_out_reset;              // rst_controller_001:reset_out -> [axi_ad9361_adc_dma:m_dest_axi_aresetn, axi_ad9361_dac_dma:m_src_axi_aresetn]

	axi_ad9361 #(
		.ID                       (0),
		.MODE_1R1T                (0),
		.DEVICE_TYPE              (0),
		.TDD_DISABLE              (0),
		.CMOS_OR_LVDS_N           (0),
		.ADC_DATAPATH_DISABLE     (0),
		.ADC_USERPORTS_DISABLE    (0),
		.ADC_DATAFORMAT_DISABLE   (0),
		.ADC_DCFILTER_DISABLE     (0),
		.ADC_IQCORRECTION_DISABLE (0),
		.DAC_IODELAY_ENABLE       (0),
		.DAC_DATAPATH_DISABLE     (0),
		.DAC_DDS_DISABLE          (0),
		.DAC_USERPORTS_DISABLE    (0),
		.DAC_IQCORRECTION_DISABLE (0),
		.IO_DELAY_GROUP           ("dev_if_delay_group")
	) axi_ad9361 (
		.s_axi_aclk      (sys_clk_clk),                                 //        s_axi_clock.clk
		.s_axi_aresetn   (~rst_controller_reset_out_reset),             //        s_axi_reset.reset_n
		.s_axi_awvalid   (axi_ad9361_s_axi_awvalid),                    //              s_axi.awvalid
		.s_axi_awaddr    (axi_ad9361_s_axi_awaddr),                     //                   .awaddr
		.s_axi_awprot    (axi_ad9361_s_axi_awprot),                     //                   .awprot
		.s_axi_awready   (axi_ad9361_s_axi_awready),                    //                   .awready
		.s_axi_wvalid    (axi_ad9361_s_axi_wvalid),                     //                   .wvalid
		.s_axi_wdata     (axi_ad9361_s_axi_wdata),                      //                   .wdata
		.s_axi_wstrb     (axi_ad9361_s_axi_wstrb),                      //                   .wstrb
		.s_axi_wready    (axi_ad9361_s_axi_wready),                     //                   .wready
		.s_axi_bvalid    (axi_ad9361_s_axi_bvalid),                     //                   .bvalid
		.s_axi_bresp     (axi_ad9361_s_axi_bresp),                      //                   .bresp
		.s_axi_bready    (axi_ad9361_s_axi_bready),                     //                   .bready
		.s_axi_arvalid   (axi_ad9361_s_axi_arvalid),                    //                   .arvalid
		.s_axi_araddr    (axi_ad9361_s_axi_araddr),                     //                   .araddr
		.s_axi_arprot    (axi_ad9361_s_axi_arprot),                     //                   .arprot
		.s_axi_arready   (axi_ad9361_s_axi_arready),                    //                   .arready
		.s_axi_rvalid    (axi_ad9361_s_axi_rvalid),                     //                   .rvalid
		.s_axi_rresp     (axi_ad9361_s_axi_rresp),                      //                   .rresp
		.s_axi_rdata     (axi_ad9361_s_axi_rdata),                      //                   .rdata
		.s_axi_rready    (axi_ad9361_s_axi_rready),                     //                   .rready
		.dac_sync_in     (),                                            //     if_dac_sync_in.dac_sync_in
		.dac_sync_out    (),                                            //    if_dac_sync_out.dac_sync_out
		.tdd_sync        (),                                            //        if_tdd_sync.tdd_sync
		.tdd_sync_cntr   (),                                            //   if_tdd_sync_cntr.tdd_sync_cntr
		.delay_clk       (delay_clk_clk),                               //       if_delay_clk.clk
		.l_clk           (axi_ad9361_l_clk_clk),                        //           if_l_clk.clk
		.clk             (axi_ad9361_l_clk_clk),                        //             if_clk.clk
		.rst             (axi_ad9361_if_rst_reset),                     //             if_rst.reset
		.adc_enable_i0   (axi_ad9361_adc_ch_0_enable),                  //           adc_ch_0.enable
		.adc_valid_i0    (axi_ad9361_adc_ch_0_valid),                   //                   .valid
		.adc_data_i0     (axi_ad9361_adc_ch_0_data),                    //                   .data
		.adc_enable_q0   (axi_ad9361_adc_ch_1_enable),                  //           adc_ch_1.enable
		.adc_valid_q0    (axi_ad9361_adc_ch_1_valid),                   //                   .valid
		.adc_data_q0     (axi_ad9361_adc_ch_1_data),                    //                   .data
		.adc_enable_i1   (axi_ad9361_adc_ch_2_enable),                  //           adc_ch_2.enable
		.adc_valid_i1    (axi_ad9361_adc_ch_2_valid),                   //                   .valid
		.adc_data_i1     (axi_ad9361_adc_ch_2_data),                    //                   .data
		.adc_enable_q1   (axi_ad9361_adc_ch_3_enable),                  //           adc_ch_3.enable
		.adc_valid_q1    (axi_ad9361_adc_ch_3_valid),                   //                   .valid
		.adc_data_q1     (axi_ad9361_adc_ch_3_data),                    //                   .data
		.adc_dovf        (util_ad9361_adc_fifo_if_din_ovf_ovf),         //        if_adc_dovf.ovf
		.adc_dunf        (),                                            //        if_adc_dunf.unf
		.adc_r1_mode     (),                                            //     if_adc_r1_mode.r1_mode
		.dac_enable_i0   (axi_ad9361_dac_ch_0_enable),                  //           dac_ch_0.enable
		.dac_valid_i0    (axi_ad9361_dac_ch_0_valid),                   //                   .valid
		.dac_data_i0     (util_ad9361_dac_upack_dac_ch_0_data),         //                   .data
		.dac_enable_q0   (axi_ad9361_dac_ch_1_enable),                  //           dac_ch_1.enable
		.dac_valid_q0    (axi_ad9361_dac_ch_1_valid),                   //                   .valid
		.dac_data_q0     (util_ad9361_dac_upack_dac_ch_1_data),         //                   .data
		.dac_enable_i1   (axi_ad9361_dac_ch_2_enable),                  //           dac_ch_2.enable
		.dac_valid_i1    (axi_ad9361_dac_ch_2_valid),                   //                   .valid
		.dac_data_i1     (util_ad9361_dac_upack_dac_ch_2_data),         //                   .data
		.dac_enable_q1   (axi_ad9361_dac_ch_3_enable),                  //           dac_ch_3.enable
		.dac_valid_q1    (axi_ad9361_dac_ch_3_valid),                   //                   .valid
		.dac_data_q1     (util_ad9361_dac_upack_dac_ch_3_data),         //                   .data
		.dac_dovf        (),                                            //        if_dac_dovf.ovf
		.dac_dunf        (axi_ad9361_dac_dma_if_fifo_rd_underflow_unf), //        if_dac_dunf.unf
		.dac_r1_mode     (),                                            //     if_dac_r1_mode.r1_mode
		.up_enable       (up_enable_up_enable),                         //       if_up_enable.up_enable
		.up_txnrx        (up_txnrx_up_txnrx),                           //        if_up_txnrx.up_txnrx
		.up_dac_gpio_in  (),                                            //  if_up_dac_gpio_in.up_dac_gpio_in
		.up_dac_gpio_out (),                                            // if_up_dac_gpio_out.up_dac_gpio_out
		.up_adc_gpio_in  (),                                            //  if_up_adc_gpio_in.up_adc_gpio_in
		.up_adc_gpio_out (),                                            // if_up_adc_gpio_out.up_adc_gpio_out
		.rx_clk_in_p     (axi_ad9361_device_if_rx_clk_in_p),            //          device_if.rx_clk_in_p
		.rx_clk_in_n     (axi_ad9361_device_if_rx_clk_in_n),            //                   .rx_clk_in_n
		.rx_frame_in_p   (axi_ad9361_device_if_rx_frame_in_p),          //                   .rx_frame_in_p
		.rx_frame_in_n   (axi_ad9361_device_if_rx_frame_in_n),          //                   .rx_frame_in_n
		.rx_data_in_p    (axi_ad9361_device_if_rx_data_in_p),           //                   .rx_data_in_p
		.rx_data_in_n    (axi_ad9361_device_if_rx_data_in_n),           //                   .rx_data_in_n
		.tx_clk_out_p    (axi_ad9361_device_if_tx_clk_out_p),           //                   .tx_clk_out_p
		.tx_clk_out_n    (axi_ad9361_device_if_tx_clk_out_n),           //                   .tx_clk_out_n
		.tx_frame_out_p  (axi_ad9361_device_if_tx_frame_out_p),         //                   .tx_frame_out_p
		.tx_frame_out_n  (axi_ad9361_device_if_tx_frame_out_n),         //                   .tx_frame_out_n
		.tx_data_out_p   (axi_ad9361_device_if_tx_data_out_p),          //                   .tx_data_out_p
		.tx_data_out_n   (axi_ad9361_device_if_tx_data_out_n),          //                   .tx_data_out_n
		.enable          (axi_ad9361_device_if_enable),                 //                   .enable
		.txnrx           (axi_ad9361_device_if_txnrx)                   //                   .txnrx
	);

	axi_dmac #(
		.ID                  (0),
		.DMA_DATA_WIDTH_SRC  (64),
		.DMA_DATA_WIDTH_DEST (64),
		.DMA_LENGTH_WIDTH    (14),
		.DMA_2D_TRANSFER     (0),
		.ASYNC_CLK_REQ_SRC   (1),
		.ASYNC_CLK_SRC_DEST  (1),
		.ASYNC_CLK_DEST_REQ  (1),
		.AXI_SLICE_DEST      (0),
		.AXI_SLICE_SRC       (0),
		.SYNC_TRANSFER_START (1),
		.CYCLIC              (0),
		.DMA_TYPE_DEST       (0),
		.DMA_TYPE_SRC        (2),
		.FIFO_SIZE           (4)
	) axi_ad9361_adc_dma (
		.s_axi_aclk         (sys_clk_clk),                                //         s_axi_clock.clk
		.s_axi_aresetn      (~rst_controller_reset_out_reset),            //         s_axi_reset.reset_n
		.s_axi_awvalid      (axi_ad9361_adc_dma_s_axi_awvalid),           //               s_axi.awvalid
		.s_axi_awaddr       (axi_ad9361_adc_dma_s_axi_awaddr),            //                    .awaddr
		.s_axi_awready      (axi_ad9361_adc_dma_s_axi_awready),           //                    .awready
		.s_axi_wvalid       (axi_ad9361_adc_dma_s_axi_wvalid),            //                    .wvalid
		.s_axi_wdata        (axi_ad9361_adc_dma_s_axi_wdata),             //                    .wdata
		.s_axi_wstrb        (axi_ad9361_adc_dma_s_axi_wstrb),             //                    .wstrb
		.s_axi_wready       (axi_ad9361_adc_dma_s_axi_wready),            //                    .wready
		.s_axi_bvalid       (axi_ad9361_adc_dma_s_axi_bvalid),            //                    .bvalid
		.s_axi_bresp        (axi_ad9361_adc_dma_s_axi_bresp),             //                    .bresp
		.s_axi_bready       (axi_ad9361_adc_dma_s_axi_bready),            //                    .bready
		.s_axi_arvalid      (axi_ad9361_adc_dma_s_axi_arvalid),           //                    .arvalid
		.s_axi_araddr       (axi_ad9361_adc_dma_s_axi_araddr),            //                    .araddr
		.s_axi_arready      (axi_ad9361_adc_dma_s_axi_arready),           //                    .arready
		.s_axi_rvalid       (axi_ad9361_adc_dma_s_axi_rvalid),            //                    .rvalid
		.s_axi_rresp        (axi_ad9361_adc_dma_s_axi_rresp),             //                    .rresp
		.s_axi_rdata        (axi_ad9361_adc_dma_s_axi_rdata),             //                    .rdata
		.s_axi_rready       (axi_ad9361_adc_dma_s_axi_rready),            //                    .rready
		.s_axi_awprot       (axi_ad9361_adc_dma_s_axi_awprot),            //                    .awprot
		.s_axi_arprot       (axi_ad9361_adc_dma_s_axi_arprot),            //                    .arprot
		.irq                (axi_ad9361_adc_dma_intr_irq),                //    interrupt_sender.irq
		.m_dest_axi_aclk    (mem_clk_clk),                                //    m_dest_axi_clock.clk
		.m_dest_axi_aresetn (~rst_controller_001_reset_out_reset),        //    m_dest_axi_reset.reset_n
		.m_dest_axi_awvalid (axi_ad9361_adc_dma_m_dest_axi_awvalid),      //          m_dest_axi.awvalid
		.m_dest_axi_awaddr  (axi_ad9361_adc_dma_m_dest_axi_awaddr),       //                    .awaddr
		.m_dest_axi_awready (axi_ad9361_adc_dma_m_dest_axi_awready),      //                    .awready
		.m_dest_axi_wvalid  (axi_ad9361_adc_dma_m_dest_axi_wvalid),       //                    .wvalid
		.m_dest_axi_wdata   (axi_ad9361_adc_dma_m_dest_axi_wdata),        //                    .wdata
		.m_dest_axi_wstrb   (axi_ad9361_adc_dma_m_dest_axi_wstrb),        //                    .wstrb
		.m_dest_axi_wready  (axi_ad9361_adc_dma_m_dest_axi_wready),       //                    .wready
		.m_dest_axi_bvalid  (axi_ad9361_adc_dma_m_dest_axi_bvalid),       //                    .bvalid
		.m_dest_axi_bresp   (axi_ad9361_adc_dma_m_dest_axi_bresp),        //                    .bresp
		.m_dest_axi_bready  (axi_ad9361_adc_dma_m_dest_axi_bready),       //                    .bready
		.m_dest_axi_arvalid (axi_ad9361_adc_dma_m_dest_axi_arvalid),      //                    .arvalid
		.m_dest_axi_araddr  (axi_ad9361_adc_dma_m_dest_axi_araddr),       //                    .araddr
		.m_dest_axi_arready (axi_ad9361_adc_dma_m_dest_axi_arready),      //                    .arready
		.m_dest_axi_rvalid  (axi_ad9361_adc_dma_m_dest_axi_rvalid),       //                    .rvalid
		.m_dest_axi_rresp   (axi_ad9361_adc_dma_m_dest_axi_rresp),        //                    .rresp
		.m_dest_axi_rdata   (axi_ad9361_adc_dma_m_dest_axi_rdata),        //                    .rdata
		.m_dest_axi_rready  (axi_ad9361_adc_dma_m_dest_axi_rready),       //                    .rready
		.m_dest_axi_awlen   (axi_ad9361_adc_dma_m_dest_axi_awlen),        //                    .awlen
		.m_dest_axi_awsize  (axi_ad9361_adc_dma_m_dest_axi_awsize),       //                    .awsize
		.m_dest_axi_awburst (axi_ad9361_adc_dma_m_dest_axi_awburst),      //                    .awburst
		.m_dest_axi_awcache (axi_ad9361_adc_dma_m_dest_axi_awcache),      //                    .awcache
		.m_dest_axi_awprot  (axi_ad9361_adc_dma_m_dest_axi_awprot),       //                    .awprot
		.m_dest_axi_wlast   (axi_ad9361_adc_dma_m_dest_axi_wlast),        //                    .wlast
		.m_dest_axi_arlen   (axi_ad9361_adc_dma_m_dest_axi_arlen),        //                    .arlen
		.m_dest_axi_arsize  (axi_ad9361_adc_dma_m_dest_axi_arsize),       //                    .arsize
		.m_dest_axi_arburst (axi_ad9361_adc_dma_m_dest_axi_arburst),      //                    .arburst
		.m_dest_axi_arcache (axi_ad9361_adc_dma_m_dest_axi_arcache),      //                    .arcache
		.m_dest_axi_arprot  (axi_ad9361_adc_dma_m_dest_axi_arprot),       //                    .arprot
		.fifo_wr_clk        (axi_ad9361_l_clk_clk),                       //      if_fifo_wr_clk.clk
		.fifo_wr_en         (util_ad9361_adc_cpack_if_adc_valid_valid),   //       if_fifo_wr_en.valid
		.fifo_wr_din        (util_ad9361_adc_cpack_if_adc_data_data),     //      if_fifo_wr_din.data
		.fifo_wr_overflow   (axi_ad9361_adc_dma_if_fifo_wr_overflow_ovf), // if_fifo_wr_overflow.ovf
		.fifo_wr_sync       (util_ad9361_adc_cpack_if_adc_sync_sync),     //     if_fifo_wr_sync.sync
		.fifo_wr_xfer_req   ()                                            // if_fifo_wr_xfer_req.xfer_req
	);

	axi_dmac #(
		.ID                  (0),
		.DMA_DATA_WIDTH_SRC  (64),
		.DMA_DATA_WIDTH_DEST (64),
		.DMA_LENGTH_WIDTH    (14),
		.DMA_2D_TRANSFER     (0),
		.ASYNC_CLK_REQ_SRC   (1),
		.ASYNC_CLK_SRC_DEST  (1),
		.ASYNC_CLK_DEST_REQ  (1),
		.AXI_SLICE_DEST      (1),
		.AXI_SLICE_SRC       (0),
		.SYNC_TRANSFER_START (0),
		.CYCLIC              (1),
		.DMA_TYPE_DEST       (2),
		.DMA_TYPE_SRC        (0),
		.FIFO_SIZE           (4)
	) axi_ad9361_dac_dma (
		.s_axi_aclk        (sys_clk_clk),                                     //          s_axi_clock.clk
		.s_axi_aresetn     (~rst_controller_reset_out_reset),                 //          s_axi_reset.reset_n
		.s_axi_awvalid     (axi_ad9361_dac_dma_s_axi_awvalid),                //                s_axi.awvalid
		.s_axi_awaddr      (axi_ad9361_dac_dma_s_axi_awaddr),                 //                     .awaddr
		.s_axi_awready     (axi_ad9361_dac_dma_s_axi_awready),                //                     .awready
		.s_axi_wvalid      (axi_ad9361_dac_dma_s_axi_wvalid),                 //                     .wvalid
		.s_axi_wdata       (axi_ad9361_dac_dma_s_axi_wdata),                  //                     .wdata
		.s_axi_wstrb       (axi_ad9361_dac_dma_s_axi_wstrb),                  //                     .wstrb
		.s_axi_wready      (axi_ad9361_dac_dma_s_axi_wready),                 //                     .wready
		.s_axi_bvalid      (axi_ad9361_dac_dma_s_axi_bvalid),                 //                     .bvalid
		.s_axi_bresp       (axi_ad9361_dac_dma_s_axi_bresp),                  //                     .bresp
		.s_axi_bready      (axi_ad9361_dac_dma_s_axi_bready),                 //                     .bready
		.s_axi_arvalid     (axi_ad9361_dac_dma_s_axi_arvalid),                //                     .arvalid
		.s_axi_araddr      (axi_ad9361_dac_dma_s_axi_araddr),                 //                     .araddr
		.s_axi_arready     (axi_ad9361_dac_dma_s_axi_arready),                //                     .arready
		.s_axi_rvalid      (axi_ad9361_dac_dma_s_axi_rvalid),                 //                     .rvalid
		.s_axi_rresp       (axi_ad9361_dac_dma_s_axi_rresp),                  //                     .rresp
		.s_axi_rdata       (axi_ad9361_dac_dma_s_axi_rdata),                  //                     .rdata
		.s_axi_rready      (axi_ad9361_dac_dma_s_axi_rready),                 //                     .rready
		.s_axi_awprot      (axi_ad9361_dac_dma_s_axi_awprot),                 //                     .awprot
		.s_axi_arprot      (axi_ad9361_dac_dma_s_axi_arprot),                 //                     .arprot
		.irq               (axi_ad9361_dac_dma_intr_irq),                     //     interrupt_sender.irq
		.m_src_axi_aclk    (mem_clk_clk),                                     //      m_src_axi_clock.clk
		.m_src_axi_aresetn (~rst_controller_001_reset_out_reset),             //      m_src_axi_reset.reset_n
		.m_src_axi_awvalid (axi_ad9361_dac_dma_m_src_axi_awvalid),            //            m_src_axi.awvalid
		.m_src_axi_awaddr  (axi_ad9361_dac_dma_m_src_axi_awaddr),             //                     .awaddr
		.m_src_axi_awready (axi_ad9361_dac_dma_m_src_axi_awready),            //                     .awready
		.m_src_axi_wvalid  (axi_ad9361_dac_dma_m_src_axi_wvalid),             //                     .wvalid
		.m_src_axi_wdata   (axi_ad9361_dac_dma_m_src_axi_wdata),              //                     .wdata
		.m_src_axi_wstrb   (axi_ad9361_dac_dma_m_src_axi_wstrb),              //                     .wstrb
		.m_src_axi_wready  (axi_ad9361_dac_dma_m_src_axi_wready),             //                     .wready
		.m_src_axi_bvalid  (axi_ad9361_dac_dma_m_src_axi_bvalid),             //                     .bvalid
		.m_src_axi_bresp   (axi_ad9361_dac_dma_m_src_axi_bresp),              //                     .bresp
		.m_src_axi_bready  (axi_ad9361_dac_dma_m_src_axi_bready),             //                     .bready
		.m_src_axi_arvalid (axi_ad9361_dac_dma_m_src_axi_arvalid),            //                     .arvalid
		.m_src_axi_araddr  (axi_ad9361_dac_dma_m_src_axi_araddr),             //                     .araddr
		.m_src_axi_arready (axi_ad9361_dac_dma_m_src_axi_arready),            //                     .arready
		.m_src_axi_rvalid  (axi_ad9361_dac_dma_m_src_axi_rvalid),             //                     .rvalid
		.m_src_axi_rresp   (axi_ad9361_dac_dma_m_src_axi_rresp),              //                     .rresp
		.m_src_axi_rdata   (axi_ad9361_dac_dma_m_src_axi_rdata),              //                     .rdata
		.m_src_axi_rready  (axi_ad9361_dac_dma_m_src_axi_rready),             //                     .rready
		.m_src_axi_awlen   (axi_ad9361_dac_dma_m_src_axi_awlen),              //                     .awlen
		.m_src_axi_awsize  (axi_ad9361_dac_dma_m_src_axi_awsize),             //                     .awsize
		.m_src_axi_awburst (axi_ad9361_dac_dma_m_src_axi_awburst),            //                     .awburst
		.m_src_axi_awcache (axi_ad9361_dac_dma_m_src_axi_awcache),            //                     .awcache
		.m_src_axi_awprot  (axi_ad9361_dac_dma_m_src_axi_awprot),             //                     .awprot
		.m_src_axi_wlast   (axi_ad9361_dac_dma_m_src_axi_wlast),              //                     .wlast
		.m_src_axi_arlen   (axi_ad9361_dac_dma_m_src_axi_arlen),              //                     .arlen
		.m_src_axi_arsize  (axi_ad9361_dac_dma_m_src_axi_arsize),             //                     .arsize
		.m_src_axi_arburst (axi_ad9361_dac_dma_m_src_axi_arburst),            //                     .arburst
		.m_src_axi_arcache (axi_ad9361_dac_dma_m_src_axi_arcache),            //                     .arcache
		.m_src_axi_arprot  (axi_ad9361_dac_dma_m_src_axi_arprot),             //                     .arprot
		.fifo_rd_clk       (axi_ad9361_l_clk_clk),                            //       if_fifo_rd_clk.clk
		.fifo_rd_en        (util_ad9361_dac_upack_if_dac_valid_valid),        //        if_fifo_rd_en.valid
		.fifo_rd_valid     (),                                                //     if_fifo_rd_valid.valid
		.fifo_rd_dout      (axi_ad9361_dac_dma_if_fifo_rd_dout_data),         //      if_fifo_rd_dout.data
		.fifo_rd_underflow (axi_ad9361_dac_dma_if_fifo_rd_underflow_unf),     // if_fifo_rd_underflow.unf
		.fifo_rd_xfer_req  (axi_ad9361_dac_dma_if_fifo_rd_xfer_req_xfer_req)  //  if_fifo_rd_xfer_req.xfer_req
	);

	ghrd_10as066n2_altera_avalon_pio_161_xquwv6i gpio (
		.clk        (sys_clk_clk),                     //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset), //               reset.reset_n
		.address    (gpio_s1_address),                 //                  s1.address
		.write_n    (gpio_s1_write_n),                 //                    .write_n
		.writedata  (gpio_s1_writedata),               //                    .writedata
		.chipselect (gpio_s1_chipselect),              //                    .chipselect
		.readdata   (gpio_s1_readdata),                //                    .readdata
		.out_port   (gpio_external_connection_export)  // external_connection.export
	);

	ghrd_10as066n2_altera_avalon_spi_161_mfkaska spi_ad9361 (
		.clk           (sys_clk_clk),                            //              clk.clk
		.reset_n       (~rst_controller_reset_out_reset),        //            reset.reset_n
		.data_from_cpu (spi_ad9361_spi_control_port_writedata),  // spi_control_port.writedata
		.data_to_cpu   (spi_ad9361_spi_control_port_readdata),   //                 .readdata
		.mem_addr      (spi_ad9361_spi_control_port_address),    //                 .address
		.read_n        (spi_ad9361_spi_control_port_read_n),     //                 .read_n
		.spi_select    (spi_ad9361_spi_control_port_chipselect), //                 .chipselect
		.write_n       (spi_ad9361_spi_control_port_write_n),    //                 .write_n
		.irq           (spi_ad9361_irq_irq),                     //              irq.irq
		.MISO          (spi_ad9361_external_MISO),               //         external.export
		.MOSI          (spi_ad9361_external_MOSI),               //                 .export
		.SCLK          (spi_ad9361_external_SCLK),               //                 .export
		.SS_n          (spi_ad9361_external_SS_n)                //                 .export
	);

	util_cpack #(
		.CHANNEL_DATA_WIDTH (16),
		.NUM_OF_CHANNELS    (4)
	) util_ad9361_adc_cpack (
		.adc_clk      (sys_clk_clk),                              //   if_adc_clk.clk
		.adc_rst      (rst_controller_reset_out_reset),           //   if_adc_rst.reset
		.adc_valid    (util_ad9361_adc_cpack_if_adc_valid_valid), // if_adc_valid.valid
		.adc_sync     (util_ad9361_adc_cpack_if_adc_sync_sync),   //  if_adc_sync.sync
		.adc_data     (util_ad9361_adc_cpack_if_adc_data_data),   //  if_adc_data.data
		.adc_enable_0 (util_ad9361_adc_fifo_dout_0_enable),       //     adc_ch_0.enable
		.adc_valid_0  (util_ad9361_adc_fifo_dout_0_valid),        //             .valid
		.adc_data_0   (util_ad9361_adc_fifo_dout_0_data),         //             .data
		.adc_enable_1 (util_ad9361_adc_fifo_dout_1_enable),       //     adc_ch_1.enable
		.adc_valid_1  (util_ad9361_adc_fifo_dout_1_valid),        //             .valid
		.adc_data_1   (util_ad9361_adc_fifo_dout_1_data),         //             .data
		.adc_enable_2 (util_ad9361_adc_fifo_dout_2_enable),       //     adc_ch_2.enable
		.adc_valid_2  (util_ad9361_adc_fifo_dout_2_valid),        //             .valid
		.adc_data_2   (util_ad9361_adc_fifo_dout_2_data),         //             .data
		.adc_enable_3 (util_ad9361_adc_fifo_dout_3_enable),       //     adc_ch_3.enable
		.adc_valid_3  (util_ad9361_adc_fifo_dout_3_valid),        //             .valid
		.adc_data_3   (util_ad9361_adc_fifo_dout_3_data)          //             .data
	);

	util_wfifo #(
		.NUM_OF_CHANNELS   (4),
		.DIN_DATA_WIDTH    (16),
		.DOUT_DATA_WIDTH   (16),
		.DIN_ADDRESS_WIDTH (4)
	) util_ad9361_adc_fifo (
		.din_clk       (axi_ad9361_l_clk_clk),                       //   if_din_clk.clk
		.din_rst       (axi_ad9361_if_rst_reset),                    //   if_din_rst.reset
		.dout_clk      (sys_clk_clk),                                //  if_dout_clk.clk
		.dout_rstn     (~rst_controller_reset_out_reset),            // if_dout_rstn.reset_n
		.din_enable_0  (axi_ad9361_adc_ch_0_enable),                 //        din_0.enable
		.din_valid_0   (axi_ad9361_adc_ch_0_valid),                  //             .valid
		.din_data_0    (axi_ad9361_adc_ch_0_data),                   //             .data
		.dout_enable_0 (util_ad9361_adc_fifo_dout_0_enable),         //       dout_0.enable
		.dout_valid_0  (util_ad9361_adc_fifo_dout_0_valid),          //             .valid
		.dout_data_0   (util_ad9361_adc_fifo_dout_0_data),           //             .data
		.din_ovf       (util_ad9361_adc_fifo_if_din_ovf_ovf),        //   if_din_ovf.ovf
		.dout_ovf      (axi_ad9361_adc_dma_if_fifo_wr_overflow_ovf), //  if_dout_ovf.ovf
		.din_enable_1  (axi_ad9361_adc_ch_1_enable),                 //        din_1.enable
		.din_valid_1   (axi_ad9361_adc_ch_1_valid),                  //             .valid
		.din_data_1    (axi_ad9361_adc_ch_1_data),                   //             .data
		.dout_enable_1 (util_ad9361_adc_fifo_dout_1_enable),         //       dout_1.enable
		.dout_valid_1  (util_ad9361_adc_fifo_dout_1_valid),          //             .valid
		.dout_data_1   (util_ad9361_adc_fifo_dout_1_data),           //             .data
		.din_enable_2  (axi_ad9361_adc_ch_2_enable),                 //        din_2.enable
		.din_valid_2   (axi_ad9361_adc_ch_2_valid),                  //             .valid
		.din_data_2    (axi_ad9361_adc_ch_2_data),                   //             .data
		.dout_enable_2 (util_ad9361_adc_fifo_dout_2_enable),         //       dout_2.enable
		.dout_valid_2  (util_ad9361_adc_fifo_dout_2_valid),          //             .valid
		.dout_data_2   (util_ad9361_adc_fifo_dout_2_data),           //             .data
		.din_enable_3  (axi_ad9361_adc_ch_3_enable),                 //        din_3.enable
		.din_valid_3   (axi_ad9361_adc_ch_3_valid),                  //             .valid
		.din_data_3    (axi_ad9361_adc_ch_3_data),                   //             .data
		.dout_enable_3 (util_ad9361_adc_fifo_dout_3_enable),         //       dout_3.enable
		.dout_valid_3  (util_ad9361_adc_fifo_dout_3_valid),          //             .valid
		.dout_data_3   (util_ad9361_adc_fifo_dout_3_data)            //             .data
	);

	util_upack #(
		.CHANNEL_DATA_WIDTH (16),
		.NUM_OF_CHANNELS    (4)
	) util_ad9361_dac_upack (
		.dac_clk      (axi_ad9361_l_clk_clk),                            //      if_dac_clk.clk
		.dma_xfer_in  (axi_ad9361_dac_dma_if_fifo_rd_xfer_req_xfer_req), //  if_dma_xfer_in.xfer_req
		.dac_xfer_out (),                                                // if_dac_xfer_out.xfer_req
		.dac_valid    (util_ad9361_dac_upack_if_dac_valid_valid),        //    if_dac_valid.valid
		.dac_sync     (),                                                //     if_dac_sync.sync
		.dac_data     (axi_ad9361_dac_dma_if_fifo_rd_dout_data),         //     if_dac_data.data
		.dac_enable_0 (axi_ad9361_dac_ch_0_enable),                      //        dac_ch_0.enable
		.dac_valid_0  (axi_ad9361_dac_ch_0_valid),                       //                .valid
		.dac_data_0   (util_ad9361_dac_upack_dac_ch_0_data),             //                .data
		.dac_enable_1 (axi_ad9361_dac_ch_1_enable),                      //        dac_ch_1.enable
		.dac_valid_1  (axi_ad9361_dac_ch_1_valid),                       //                .valid
		.dac_data_1   (util_ad9361_dac_upack_dac_ch_1_data),             //                .data
		.dac_enable_2 (axi_ad9361_dac_ch_2_enable),                      //        dac_ch_2.enable
		.dac_valid_2  (axi_ad9361_dac_ch_2_valid),                       //                .valid
		.dac_data_2   (util_ad9361_dac_upack_dac_ch_2_data),             //                .data
		.dac_enable_3 (axi_ad9361_dac_ch_3_enable),                      //        dac_ch_3.enable
		.dac_valid_3  (axi_ad9361_dac_ch_3_valid),                       //                .valid
		.dac_data_3   (util_ad9361_dac_upack_dac_ch_3_data)              //                .data
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (sys_rst_reset),                  // reset_in0.reset
		.clk            (sys_clk_clk),                    //       clk.clk
		.reset_out      (rst_controller_reset_out_reset), // reset_out.reset
		.reset_req      (),                               // (terminated)
		.reset_req_in0  (1'b0),                           // (terminated)
		.reset_in1      (1'b0),                           // (terminated)
		.reset_req_in1  (1'b0),                           // (terminated)
		.reset_in2      (1'b0),                           // (terminated)
		.reset_req_in2  (1'b0),                           // (terminated)
		.reset_in3      (1'b0),                           // (terminated)
		.reset_req_in3  (1'b0),                           // (terminated)
		.reset_in4      (1'b0),                           // (terminated)
		.reset_req_in4  (1'b0),                           // (terminated)
		.reset_in5      (1'b0),                           // (terminated)
		.reset_req_in5  (1'b0),                           // (terminated)
		.reset_in6      (1'b0),                           // (terminated)
		.reset_req_in6  (1'b0),                           // (terminated)
		.reset_in7      (1'b0),                           // (terminated)
		.reset_req_in7  (1'b0),                           // (terminated)
		.reset_in8      (1'b0),                           // (terminated)
		.reset_req_in8  (1'b0),                           // (terminated)
		.reset_in9      (1'b0),                           // (terminated)
		.reset_req_in9  (1'b0),                           // (terminated)
		.reset_in10     (1'b0),                           // (terminated)
		.reset_req_in10 (1'b0),                           // (terminated)
		.reset_in11     (1'b0),                           // (terminated)
		.reset_req_in11 (1'b0),                           // (terminated)
		.reset_in12     (1'b0),                           // (terminated)
		.reset_req_in12 (1'b0),                           // (terminated)
		.reset_in13     (1'b0),                           // (terminated)
		.reset_req_in13 (1'b0),                           // (terminated)
		.reset_in14     (1'b0),                           // (terminated)
		.reset_req_in14 (1'b0),                           // (terminated)
		.reset_in15     (1'b0),                           // (terminated)
		.reset_req_in15 (1'b0)                            // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_001 (
		.reset_in0      (mem_rst_reset),                      // reset_in0.reset
		.clk            (mem_clk_clk),                        //       clk.clk
		.reset_out      (rst_controller_001_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_in1      (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

endmodule
